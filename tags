!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ELEM_LEN	LL_arr_gen.h	4;"	d
ELEM_TYPE	LL_arr_gen.h	3;"	d
ELE_LEN	combination.c	7;"	d	file:
LL_arr_gen_func	LL_arr_gen.c	/^void LL_arr_gen_func(int blk_num, int *length_arr, Node **node_arr)$/;"	f
Node	LL_arr_gen.h	/^}Node;$/;"	t	typeref:struct:node
bin2dec	combination.c	/^int bin2dec(char *bin, int bin_len)$/;"	f
combination	LL_arr_gen.c	/^int combination(int n, int k)$/;"	f
combinations	combination.c	/^void combinations (int v[], int start, int n, int k, int maxk) {$/;"	f
combinations_bin	combination.c	/^void combinations_bin (int v[], $/;"	f
data	LL_arr_gen.h	/^	ELEM_TYPE data;$/;"	m	struct:node
factorial	LL_arr_gen.c	/^int factorial(int n)$/;"	f
init_LL	LL_arr_gen.c	/^void init_LL(Node *L)$/;"	f
insert_node	LL_arr_gen.c	/^Node *insert_node(Node *H, ELEM_TYPE D)$/;"	f
main	combination.c	/^int main (int argc, char *argv[]) {$/;"	f
main	test.c	/^int main()$/;"	f
next	LL_arr_gen.h	/^	struct node *next;$/;"	m	struct:node	typeref:struct:node::node
node	LL_arr_gen.h	/^typedef struct node{$/;"	s
traversal_list	LL_arr_gen.c	/^void traversal_list(Node *H)$/;"	f
uchar	LL_arr_gen.h	2;"	d
